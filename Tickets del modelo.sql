-- MySQL Script generated by MySQL Workbench
-- Tue Dec 29 11:03:38 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tickets
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tickets
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tickets` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema tickets
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tickets
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tickets` DEFAULT CHARACTER SET utf8 ;
USE `tickets` ;

-- -----------------------------------------------------
-- Table `tickets`.`Usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`Usuarios` (
  `idUsuario` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellidos` VARCHAR(45) NULL,
  `user` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `telefono` VARCHAR(45) NULL,
  `habilitado` CHAR(1) NOT NULL DEFAULT '1',
  `registrado_por` INT UNSIGNED NULL,
  PRIMARY KEY (`idUsuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Tabla principal donde están ubicados todos los usuarios del sistema\n- clientes / usuario final\n- técnicos\n- administradores';


-- -----------------------------------------------------
-- Table `tickets`.`Roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`Roles` (
  `idRol` INT UNSIGNED NOT NULL,
  `rol` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(100) NULL,
  PRIMARY KEY (`idRol`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Pueden ser:\n- Administradores\n- Técnicos\n- Cliente Final\n';


-- -----------------------------------------------------
-- Table `tickets`.`Incidentes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`Incidentes` (
  `idIncidente` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `fecha_crea` DATETIME NOT NULL,
  `descripcion` VARCHAR(100) NOT NULL COMMENT 'con un breve texto se explica lo que le pasa',
  `Usuarios_idUsuario` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idIncidente`),
  INDEX `fk_Incidentes_Usuarios1_idx` (`Usuarios_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_crea`
    FOREIGN KEY (`Usuarios_idUsuario`)
    REFERENCES `tickets`.`Usuarios` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tickets`.`Intervenciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`Intervenciones` (
  `idIntervencion` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NOT NULL,
  `fecha_intervencion` DATETIME NOT NULL,
  `Usuarios_idUsuario` INT UNSIGNED NOT NULL,
  `Incidentes_idIncidente` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idIntervencion`),
  INDEX `fk_Intervenciones_Usuarios1_idx` (`Usuarios_idUsuario` ASC) VISIBLE,
  INDEX `fk_Intervenciones_Incidentes1_idx` (`Incidentes_idIncidente` ASC) VISIBLE,
  CONSTRAINT `fk_se_asigna_a`
    FOREIGN KEY (`Usuarios_idUsuario`)
    REFERENCES `tickets`.`Usuarios` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_realiza`
    FOREIGN KEY (`Incidentes_idIncidente`)
    REFERENCES `tickets`.`Incidentes` (`idIncidente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'todas las intervenciones que se realizan a cada incidente';


-- -----------------------------------------------------
-- Table `tickets`.`Niveles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`Niveles` (
  `IdNivel` INT UNSIGNED NOT NULL,
  `nivel` VARCHAR(15) NOT NULL,
  `descripcion` VARCHAR(100) NULL,
  `fecha_escalada` DATETIME NULL,
  `Intervenciones_idIntervencion` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`IdNivel`),
  INDEX `fk_Niveles_Intervenciones1_idx` (`Intervenciones_idIntervencion` ASC) VISIBLE,
  CONSTRAINT `fk_se_escala`
    FOREIGN KEY (`Intervenciones_idIntervencion`)
    REFERENCES `tickets`.`Intervenciones` (`idIntervencion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Aquí se dice a donde se escala:\nbásico\ntécnico\nexterno';


-- -----------------------------------------------------
-- Table `tickets`.`Prioridades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`Prioridades` (
  `idPrioridad` INT NOT NULL,
  `prioridad` VARCHAR(15) NOT NULL,
  `descripcion` VARCHAR(100) NULL,
  `fecha_establece` DATETIME NULL,
  `Intervenciones_idIntervencion` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idPrioridad`),
  INDEX `fk_Prioridades_Intervenciones1_idx` (`Intervenciones_idIntervencion` ASC) VISIBLE,
  CONSTRAINT `fk_se_establece`
    FOREIGN KEY (`Intervenciones_idIntervencion`)
    REFERENCES `tickets`.`Intervenciones` (`idIntervencion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'que tipo de prioridad tiene esta intervención\n- baja\n- media\n- alta\n- grave\n- crítica';


-- -----------------------------------------------------
-- Table `tickets`.`Estados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`Estados` (
  `Idestado` INT NOT NULL,
  `estado` VARCHAR(15) NOT NULL,
  `descripcion` VARCHAR(100) NOT NULL,
  `fecha_evolucion` DATETIME NULL COMMENT 'la fecha en que pasó de un estado a otro.',
  `Intervenciones_idIntervencion` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Idestado`),
  INDEX `fk_Estados_Intervenciones1_idx` (`Intervenciones_idIntervencion` ASC) VISIBLE,
  CONSTRAINT `fk_evoluciona`
    FOREIGN KEY (`Intervenciones_idIntervencion`)
    REFERENCES `tickets`.`Intervenciones` (`idIntervencion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Por que etapas/estados pasa el Incidente:\n- Iniciado / Creado\n- Asignado\n- En proceso / Ejecución\n- Finalizado / Cerrado\n\nComo \'evoluciona\' el estado';


-- -----------------------------------------------------
-- Table `tickets`.`Tipos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`Tipos` (
  `idTipo` INT NOT NULL,
  `tipo` VARCHAR(15) NOT NULL,
  `descripcion` VARCHAR(100) NULL,
  `Incidentes_idIncidente` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idTipo`),
  INDEX `fk_Tipos_Incidentes1_idx` (`Incidentes_idIncidente` ASC) VISIBLE,
  CONSTRAINT `fk_se_caracteriza`
    FOREIGN KEY (`Incidentes_idIncidente`)
    REFERENCES `tickets`.`Incidentes` (`idIncidente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tipos de incidencia que nos podemos encontrar:\n- Hardware\n- Software\n- Informar de un Problema\n- Formular una pregunta';


-- -----------------------------------------------------
-- Table `tickets`.`Roles_has_Usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`Roles_has_Usuarios` (
  `Roles_idRol` INT UNSIGNED NOT NULL,
  `Usuarios_idUsuario` INT UNSIGNED NOT NULL,
  `fecha_posesion` DATETIME NULL,
  `habilitado` VARCHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`Roles_idRol`, `Usuarios_idUsuario`),
  INDEX `fk_Roles_has_Usuarios_Usuarios1_idx` (`Usuarios_idUsuario` ASC) VISIBLE,
  INDEX `fk_Roles_has_Usuarios_Roles1_idx` (`Roles_idRol` ASC) VISIBLE,
  CONSTRAINT `fk_roles_posee_usuario`
    FOREIGN KEY (`Roles_idRol`)
    REFERENCES `tickets`.`Roles` (`idRol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_posee_roles`
    FOREIGN KEY (`Usuarios_idUsuario`)
    REFERENCES `tickets`.`Usuarios` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tickets`.`Equipos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`Equipos` (
  `idEquipos` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `tipo_equipo` VARCHAR(45) NOT NULL,
  `marca` VARCHAR(45) NULL,
  `modelo` VARCHAR(45) NULL,
  `numero_serie` VARCHAR(45) NULL,
  `fecha_compra` DATETIME NULL,
  `habilitado` CHAR(1) NULL DEFAULT '1',
  `observaciones` VARCHAR(45) NULL,
  `usuarios_idUsuario` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idEquipos`, `usuarios_idUsuario`),
  INDEX `fk_Equipos_usuarios1_idx` (`usuarios_idUsuario` ASC) VISIBLE)
ENGINE = InnoDB;

USE `tickets` ;

-- -----------------------------------------------------
-- Table `tickets`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`usuarios` (
  `idUsuario` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellidos` VARCHAR(45) NULL DEFAULT NULL,
  `user` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL DEFAULT NULL,
  `telefono` VARCHAR(45) NULL DEFAULT NULL,
  `habilitado` CHAR(1) NOT NULL DEFAULT '1',
  `registrado_por` INT UNSIGNED NULL DEFAULT NULL,
  PRIMARY KEY (`idUsuario`))
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = utf8
COMMENT = 'Tabla principal donde están ubicados todos los usuarios del sistema\\n- clientes / usuario final\\n- técnicos\\n- administradores';


-- -----------------------------------------------------
-- Table `tickets`.`equipos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`equipos` (
  `idEquipos` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(45) NOT NULL,
  `marca` VARCHAR(45) NULL DEFAULT NULL,
  `modelo` VARCHAR(45) NULL DEFAULT NULL,
  `num_serie` VARCHAR(45) NULL DEFAULT NULL,
  `fecha_compra` DATETIME NULL DEFAULT NULL,
  `observaciones` VARCHAR(45) NULL DEFAULT NULL,
  `habilitado` CHAR(1) NOT NULL DEFAULT '1',
  `usuarios_idUsuario` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idEquipos`),
  INDEX `fk_equipos_usuarios1_idx` (`usuarios_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_equipos_posee_usuario`
    FOREIGN KEY (`usuarios_idUsuario`)
    REFERENCES `tickets`.`usuarios` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tickets`.`incidentes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`incidentes` (
  `idIncidente` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `fecha_crea` DATETIME NOT NULL,
  `descripcion` VARCHAR(100) NOT NULL COMMENT 'con un breve texto se explica lo que le pasa',
  `Usuarios_idUsuario` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idIncidente`),
  INDEX `fk_Incidentes_Usuarios1_idx` (`Usuarios_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_crea`
    FOREIGN KEY (`Usuarios_idUsuario`)
    REFERENCES `tickets`.`usuarios` (`idUsuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tickets`.`intervenciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`intervenciones` (
  `idIntervencion` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NOT NULL,
  `fecha_intervencion` DATETIME NOT NULL,
  `Usuarios_idUsuario` INT UNSIGNED NOT NULL,
  `Incidentes_idIncidente` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idIntervencion`),
  INDEX `fk_Intervenciones_Usuarios1_idx` (`Usuarios_idUsuario` ASC) VISIBLE,
  INDEX `fk_Intervenciones_Incidentes1_idx` (`Incidentes_idIncidente` ASC) VISIBLE,
  CONSTRAINT `fk_realiza`
    FOREIGN KEY (`Incidentes_idIncidente`)
    REFERENCES `tickets`.`incidentes` (`idIncidente`),
  CONSTRAINT `fk_se_asigna_a`
    FOREIGN KEY (`Usuarios_idUsuario`)
    REFERENCES `tickets`.`usuarios` (`idUsuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'todas las intervenciones que se realizan a cada incidente';


-- -----------------------------------------------------
-- Table `tickets`.`estados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`estados` (
  `Idestado` INT NOT NULL,
  `estado` VARCHAR(15) NOT NULL,
  `descripcion` VARCHAR(100) NOT NULL,
  `fecha_evolucion` DATETIME NULL DEFAULT NULL COMMENT 'la fecha en que pasó de un estado a otro.',
  `Intervenciones_idIntervencion` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Idestado`),
  INDEX `fk_Estados_Intervenciones1_idx` (`Intervenciones_idIntervencion` ASC) VISIBLE,
  CONSTRAINT `fk_evoluciona`
    FOREIGN KEY (`Intervenciones_idIntervencion`)
    REFERENCES `tickets`.`intervenciones` (`idIntervencion`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Por que etapas/estados pasa el Incidente:\\n- Iniciado / Creado\\n- Asignado\\n- En proceso / Ejecución\\n- Finalizado / Cerrado\\n\\nComo \'evoluciona\' el estado';


-- -----------------------------------------------------
-- Table `tickets`.`niveles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`niveles` (
  `IdNivel` INT UNSIGNED NOT NULL,
  `nivel` VARCHAR(15) NOT NULL,
  `descripcion` VARCHAR(100) NULL DEFAULT NULL,
  `fecha_escalada` DATETIME NULL DEFAULT NULL,
  `Intervenciones_idIntervencion` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`IdNivel`),
  INDEX `fk_Niveles_Intervenciones1_idx` (`Intervenciones_idIntervencion` ASC) VISIBLE,
  CONSTRAINT `fk_se_escala`
    FOREIGN KEY (`Intervenciones_idIntervencion`)
    REFERENCES `tickets`.`intervenciones` (`idIntervencion`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Aquí se dice a donde se escala:\\nbásico\\ntécnico\\nexterno';


-- -----------------------------------------------------
-- Table `tickets`.`prioridades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`prioridades` (
  `idPrioridad` INT NOT NULL,
  `prioridad` VARCHAR(15) NOT NULL,
  `descripcion` VARCHAR(100) NULL DEFAULT NULL,
  `fecha_establece` DATETIME NULL DEFAULT NULL,
  `Intervenciones_idIntervencion` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idPrioridad`),
  INDEX `fk_Prioridades_Intervenciones1_idx` (`Intervenciones_idIntervencion` ASC) VISIBLE,
  CONSTRAINT `fk_se_establece`
    FOREIGN KEY (`Intervenciones_idIntervencion`)
    REFERENCES `tickets`.`intervenciones` (`idIntervencion`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'que tipo de prioridad tiene esta intervención\\n- baja\\n- media\\n- alta\\n- grave\\n- crítica';


-- -----------------------------------------------------
-- Table `tickets`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`roles` (
  `idRol` INT UNSIGNED NOT NULL,
  `rol` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(100) NULL DEFAULT NULL,
  PRIMARY KEY (`idRol`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Pueden ser:\\n- Administradores\\n- Técnicos\\n- Cliente Final\\n';


-- -----------------------------------------------------
-- Table `tickets`.`roles_has_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`roles_has_usuarios` (
  `Roles_idRol` INT UNSIGNED NOT NULL,
  `Usuarios_idUsuario` INT UNSIGNED NOT NULL,
  `fecha_posesion` DATETIME NULL DEFAULT NULL,
  `habilitado` VARCHAR(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`Roles_idRol`, `Usuarios_idUsuario`),
  INDEX `fk_Roles_has_Usuarios_Usuarios1_idx` (`Usuarios_idUsuario` ASC) VISIBLE,
  INDEX `fk_Roles_has_Usuarios_Roles1_idx` (`Roles_idRol` ASC) VISIBLE,
  CONSTRAINT `fk_roles_posee_usuario`
    FOREIGN KEY (`Roles_idRol`)
    REFERENCES `tickets`.`roles` (`idRol`),
  CONSTRAINT `fk_usuario_posee_roles`
    FOREIGN KEY (`Usuarios_idUsuario`)
    REFERENCES `tickets`.`usuarios` (`idUsuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tickets`.`tipos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tickets`.`tipos` (
  `idTipo` INT NOT NULL,
  `tipo` VARCHAR(15) NOT NULL,
  `descripcion` VARCHAR(100) NULL DEFAULT NULL,
  `Incidentes_idIncidente` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idTipo`),
  INDEX `fk_Tipos_Incidentes1_idx` (`Incidentes_idIncidente` ASC) VISIBLE,
  CONSTRAINT `fk_se_caracteriza`
    FOREIGN KEY (`Incidentes_idIncidente`)
    REFERENCES `tickets`.`incidentes` (`idIncidente`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Tipos de incidencia que nos podemos encontrar:\\n- Hardware\\n- Software\\n- Informar de un Problema\\n- Formular una pregunta';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
